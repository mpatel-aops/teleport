/*
 * Teleport
 * Copyright (C) 2024 Gravitational, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto3";

package teleport.lib.teleterm.v1;

import "teleport/lib/teleterm/v1/label.proto";

option go_package = "github.com/gravitational/teleport/gen/proto/go/teleport/lib/teleterm/v1;teletermv1";

// App describes an app resource.
message App {
  // uri is the cluster resource URI.
  string uri = 1;
  // name is the name of the app.
  string name = 2;
  // endpoint_uri is the URI to which the app service is going to proxy requests. It corresponds to
  // app_service.apps[].uri in the Teleport configuration.
  string endpoint_uri = 3;
  // desc is the app description.
  string desc = 4;
  // aws_console is true if this app is AWS management console.
  bool aws_console = 5;
  // public_addr is the public address the application is accessible at.
  // By default, it is a subdomain of the cluster (e.g., dumper.example.com).
  // Optionally, it can be overridden (by the 'public_addr' field in the app config)
  // with an address available on the internet.
  //
  // Always empty for SAML applications.
  string public_addr = 6;
  // friendly_name is a user readable name of the app.
  // Right now, it is set only for Okta applications.
  // It is constructed from a label value.
  // See more in api/types/resource.go.
  string friendly_name = 7;
  // saml_app is true if the application is a SAML Application (Service Provider).
  bool saml_app = 8;
  // labels is a list of labels for the app.
  repeated Label labels = 9;
  // fqdn is the hostname under which the app is accessible within the root cluster. It doesn't
  // include the port number. It is used by the Web UI to route the requests to /web/launch to the
  // correct app.
  //
  // If the app belongs to a root cluster, fqdn is equal to public_addr or <name>.<root cluster
  // proxy hostname> if public_addr is not present.
  // If the app belongs to a leaf cluster, fqdn is equal to <name>.<root cluster proxy hostname>.
  //
  // fqdn is not present for SAML applications.
  string fqdn = 10;
  // aws_roles is a list of AWS IAM roles for the application representing AWS console.
  repeated AWSRole aws_roles = 11;
}

// AwsRole describes AWS IAM role.
message AWSRole {
  // Name is the full role name with the entire path.
  string name = 1;
  // Display is the role display name.
  string display = 2;
  // ARN is the full role ARN.
  string arn = 3;
  // AccountID is the AWS Account ID this role refers to.
  string account_id = 4;
}
